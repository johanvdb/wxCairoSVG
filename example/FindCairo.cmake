IF (CAIRO_INCLUDE_DIR AND CAIRO_LIBRARIES)
   # in cache already
   SET(CAIRO_FIND_QUIETLY TRUE)
ENDIF (CAIRO_INCLUDE_DIR AND CAIRO_LIBRARIES)

IF (NOT WIN32)
   # use pkg-config to get the directories and then use these values
   # in the FIND_PATH() and FIND_LIBRARY() calls
   FIND_PACKAGE(PkgConfig)
   PKG_CHECK_MODULES(PC_CAIRO cairo)
   SET(CAIRO_DEFINITIONS ${PC_CAIRO_CFLAGS_OTHER})
   PKG_CHECK_MODULES(PC_PIXMAN pixman-1)
   IF (PC_PIXMAN_FOUND)
       SET(CAIRO_DEFINITIONS ${CAIRO_DEFINITIONS} ${PC_PIXMAN_CFLAGS_OTHER})
   ENDIF (PC_PIXMAN_FOUND)
ELSE (NOT WIN32)
  FIND_PATH(CAIRO_ROOT_DIR 
    NAMES include/cairo/cairo.h
    PATHS
      $ENV{CAIRO_ROOT_DIR}
      $ENV{CAIRO}
      C:/
      D:/
      $ENV{ProgramFiles}
    PATH_SUFFIXES 
      Cairo
    DOC "Cairo base/installation directory?"
    )
ENDIF (NOT WIN32)

FIND_PATH(CAIRO_INCLUDE_DIR cairo.h
   HINTS
   ${CAIRO_ROOT_DIR}/include
   ${PC_CAIRO_INCLUDEDIR}
   ${PC_CAIRO_INCLUDE_DIRS}
   PATH_SUFFIXES cairo
   )

FIND_LIBRARY(CAIRO_LIBRARY NAMES cairo libcairo
   HINTS
   ${CAIRO_ROOT_DIR}/lib
   ${PC_CAIRO_LIBDIR}
   ${PC_CAIRO_LIBRARY_DIRS}
   )

FIND_LIBRARY(PIXMAN_LIBRARY NAMES pixman-1 libpixman-1 pixman libpixman
   HINTS
   ${PC_PIXMAN_LIBDIR}
   ${PC_PIXMAN_LIBRARY_DIRS}
   )

SET(CAIRO_LIBRARIES ${CAIRO_LIBRARY})

IF (PIXMAN_LIBRARY)
	SET(CAIRO_LIBRARIES ${CAIRO_LIBRARIES} ${PIXMAN_LIBRARY})
ENDIF (PIXMAN_LIBRARY)

INCLUDE(FindPackageHandleStandardArgs)

# handle the QUIETLY and REQUIRED arguments and set CAIRO_FOUND to TRUE if 
# all listed variables are TRUE
FIND_PACKAGE_HANDLE_STANDARD_ARGS(Cairo DEFAULT_MSG CAIRO_LIBRARIES CAIRO_INCLUDE_DIR)

MARK_AS_ADVANCED(CAIRO_INCLUDE_DIR CAIRO_LIBRARIES CAIRO_DEFINITIONS)

